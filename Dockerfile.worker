# Build stage
FROM golang:1.23-alpine AS builder

# Set working directory
WORKDIR /app

# Install dependencies
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the worker binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o worker ./cmd/worker

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN adduser -D -s /bin/sh worker

# Set working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/worker .

# Copy config file if it exists
COPY --from=builder /app/config.env* ./

# Change ownership to worker user
RUN chown -R worker:worker /app

# Switch to non-root user
USER worker

# Expose port (for health checks if needed)
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD pgrep -f worker || exit 1

# Run the worker
CMD ./worker
